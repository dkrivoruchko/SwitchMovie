apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion compile_sdk
    buildToolsVersion build_tools

    defaultConfig {
        minSdkVersion min_sdk
        targetSdkVersion target_sdk
        versionCode version_code
        versionName version_name
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        debug.java.srcDirs += 'src/debug/kotlin'
        release.java.srcDirs += 'src/release/kotlin'

        main.java.srcDirs += [file("$buildDir/generated/source/kapt/main")]
        debug.java.srcDirs += [file("$buildDir/generated/source/kapt/debug")]
        release.java.srcDirs += [file("$buildDir/generated/source/kapt/release")]

        main.java.srcDirs += [file("$buildDir/generated/source/kaptKotlin/main")]
        debug.java.srcDirs += [file("$buildDir/generated/source/kaptKotlin/debug")]
        release.java.srcDirs += [file("$buildDir/generated/source/kaptKotlin/release")]
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

dependencies {
    api "org.jetbrains:annotations:$annotations_version"

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"

    api "android.arch.lifecycle:livedata-core:$lifecycle_version"
//    api "android.arch.lifecycle:livedata:$lifecycle_version"

    api "com.jakewharton.threetenabp:threetenabp:$threetenabp_version"

    api "com.jakewharton.timber:timber:$timber_version"
}