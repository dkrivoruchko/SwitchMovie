apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'androidx.navigation.safeargs.kotlin'


android {
    compileSdkVersion(compileSdk)
    buildToolsVersion(buildTools)

    defaultConfig {
        applicationId "info.dvkr.switchmovie"
        minSdkVersion(minSdk)
        targetSdkVersion(targetSdk)
        versionCode = versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName = "$versionMajor.$versionMinor.$versionPatch"
        resConfigs "en"

        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        debug.java.srcDirs += 'src/debug/kotlin'
        release.java.srcDirs += 'src/release/kotlin'
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

androidExtensions { experimental = true }

dependencies {
    implementation project(':domain')
    implementation project(':data')

    implementation("org.jetbrains:annotations:$jetbrainsAnnotations")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVersion")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVersion")

    implementation("androidx.annotation:annotation:$androidxAnnotation")
    implementation("androidx.appcompat:appcompat:$androidxAppcompat")
    implementation("androidx.cardview:cardview:$androidxCardview")
    implementation("androidx.recyclerview:recyclerview:$androidxRecyclerview")
    implementation("androidx.constraintlayout:constraintlayout:$androidxConstraint")
//    implementation("com.google.android.material:material:$androidMaterial") TODO Move to new design

    implementation("androidx.navigation:navigation-fragment-ktx:$androidxNavigation")
    implementation("androidx.navigation:navigation-ui:$androidxNavigation")

    implementation("io.coil-kt:coil:0.6.0")

    implementation("androidx.room:room-runtime:$androidxRroom")
    kapt("androidx.room:room-compiler:$androidxRroom")
    implementation("androidx.room:room-ktx:$androidxRroom")

    implementation("androidx.lifecycle:lifecycle-extensions:$androidxLifecycle")
    implementation("androidx.lifecycle:lifecycle-runtime:$androidxLifecycle")
    implementation("androidx.lifecycle:lifecycle-common-java8:$androidxLifecycle")

    implementation("org.koin:koin-android:$koin")
    implementation("org.koin:koin-androidx-viewmodel:$koin")

    implementation("com.squareup.okio:okio:$okio")
    implementation("com.squareup.okhttp3:okhttp:$okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor:$okhttp")

    implementation("com.jakewharton.threetenabp:threetenabp:$threetenabp")
    implementation("com.github.iamironz:binaryprefs:$binaryprefs")
    implementation("com.elvishew:xlog:$xlog")

    debugImplementation("com.squareup.leakcanary:leakcanary-android:$leakcanary")
}